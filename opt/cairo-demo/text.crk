// An empty snippet, use an example for other snippets

import crack.math PI, sqrt;
import crack.lang CString;
import snippetBase snippetClass;
import crack.ext._cairo cairo_t, cairo_surface_t, cairo_select_font_face,
                         CAIRO_FONT_SLANT_NORMAL, CAIRO_FONT_WEIGHT_BOLD,
                         cairo_set_font_size, cairo_move_to, cairo_text_path,
                         cairo_set_source_rgb, cairo_arc, cairo_close_path,
                         cairo_fill, cairo_show_text, cairo_fill_preserve,
                         cairo_set_line_width, cairo_stroke, cairo_set_source_rgba,
                         cairo_text_extents_t, cairo_text_extents_new, 
                         CAIRO_FONT_WEIGHT_NORMAL, cairo_text_extents, 
                         cairo_rel_line_to;

class textClass:snippetClass{
   oper init(){
      name="text";
   }

   void draw(cairo_t cr, cairo_surface_t surface){
      cairo_select_font_face (cr, CString("Sans").buffer, CAIRO_FONT_SLANT_NORMAL,
                                     CAIRO_FONT_WEIGHT_BOLD);
      cairo_set_font_size (cr, 90.0);

      cairo_move_to (cr, 10.0, 135.0);
      cairo_show_text (cr, CString("Hello").buffer);

      cairo_move_to (cr, 70.0, 165.0);
      cairo_text_path (cr, CString("void").buffer);
      cairo_set_source_rgb (cr, 0.5, 0.5, 1);
      cairo_fill_preserve (cr);
      cairo_set_source_rgb (cr, 0, 0, 0);
      cairo_set_line_width (cr, 2.56);
      cairo_stroke (cr);

      /* draw helping lines */
      cairo_set_source_rgba (cr, 1, 0.2, 0.2, 0.6);
      cairo_arc (cr, 10.0, 135.0, 5.12, 0, 2*PI);
      cairo_close_path (cr);
      cairo_arc (cr, 70.0, 165.0, 5.12, 0, 2*PI);
      cairo_fill (cr);
   }
}

class textAlignClass:snippetClass{
   oper init(){
      name="text_align";
   }

   void draw(cairo_t cr, cairo_surface_t surface){
      cairo_text_extents_t extents = cairo_text_extents_new();

      CString utf8 = {"cairo"};
      float64 x,y;

      cairo_select_font_face (cr, CString("Sans").buffer,
          CAIRO_FONT_SLANT_NORMAL,
          CAIRO_FONT_WEIGHT_NORMAL);

      cairo_set_font_size (cr, 52.0);
      cairo_text_extents (cr, utf8.buffer, extents);
      x = 128.0-(extents.width/2 + extents.x_bearing);
      y = 128.0-(extents.height/2 + extents.y_bearing);

      cairo_move_to (cr, x, y);
      cairo_show_text (cr, utf8.buffer);

      /* draw helping lines */
      cairo_set_source_rgba (cr, 1, 0.2, 0.2, 0.6);
      cairo_set_line_width (cr, 6.0);
      cairo_arc (cr, x, y, 10.0, 0, 2*PI);
      cairo_fill (cr);
      cairo_move_to (cr, 128.0, 0);
      cairo_rel_line_to (cr, 0, 256);
      cairo_move_to (cr, 0, 128.0);
      cairo_rel_line_to (cr, 256, 0);
      cairo_stroke (cr);
   }
}

class textExtentsClass:snippetClass{
   oper init(){
      name="text_extents";
   }

   void draw(cairo_t cr, cairo_surface_t surface){
      cairo_text_extents_t extents = cairo_text_extents_new();

      CString utf8 = {"cairo"};
      float64 x,y;

      cairo_select_font_face (cr, CString("Sans").buffer,
          CAIRO_FONT_SLANT_NORMAL,
          CAIRO_FONT_WEIGHT_NORMAL);

      cairo_set_font_size (cr, 100.0);
      cairo_text_extents (cr, utf8.buffer, extents);

      x=25.0;
      y=150.0;

      cairo_move_to (cr, x,y);
      cairo_show_text (cr, utf8.buffer);

      /* draw helping lines */
      cairo_set_source_rgba (cr, 1, 0.2, 0.2, 0.6);
      cairo_set_line_width (cr, 6.0);
      cairo_arc (cr, x, y, 10.0, 0, 2*PI);
      cairo_fill (cr);
      cairo_move_to (cr, x,y);
      cairo_rel_line_to (cr, 0, -extents.height);
      cairo_rel_line_to (cr, extents.width, 0);
      cairo_rel_line_to (cr, extents.x_bearing, -extents.y_bearing);
      cairo_stroke (cr);
   }
}
